// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220324204938_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.Akademisyen", b =>
                {
                    b.Property<int>("AkademisyenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AkademisyenId"), 1L, 1);

                    b.Property<string>("AkademisyenAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkademisyenMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkademisyenSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkademisyenUnvani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Asistan")
                        .HasColumnType("bit");

                    b.Property<int?>("DonemId")
                        .HasColumnType("int");

                    b.HasKey("AkademisyenId");

                    b.HasIndex("DonemId");

                    b.ToTable("Akademisyens");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AkademisyenKisit", b =>
                {
                    b.Property<int?>("AkademisyenKisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AkademisyenKisitId"), 1L, 1);

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<int?>("SablonZamanId")
                        .HasColumnType("int");

                    b.HasKey("AkademisyenKisitId");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("SablonZamanId");

                    b.ToTable("AkademisyenKisits");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Bolum", b =>
                {
                    b.Property<int>("BolumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolumId"), 1L, 1);

                    b.Property<string>("BolumAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FakulteId")
                        .HasColumnType("int");

                    b.HasKey("BolumId");

                    b.HasIndex("FakulteId");

                    b.ToTable("Bolums");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BolumKisit", b =>
                {
                    b.Property<int>("BolumKisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolumKisitId"), 1L, 1);

                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<int>("SablonZamanId")
                        .HasColumnType("int");

                    b.HasKey("BolumKisitId");

                    b.HasIndex("BolumId");

                    b.HasIndex("SablonZamanId");

                    b.ToTable("BolumKisits");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DersId"), 1L, 1);

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<int?>("BolumId")
                        .HasColumnType("int");

                    b.Property<string>("DersAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DersKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DersSube")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DersTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DonemId")
                        .HasColumnType("int");

                    b.Property<int?>("Kontenjan")
                        .HasColumnType("int");

                    b.Property<int?>("TeorikSaati")
                        .HasColumnType("int");

                    b.Property<int?>("UygulamaSaati")
                        .HasColumnType("int");

                    b.Property<int?>("ÖğrenciSayisi")
                        .HasColumnType("int");

                    b.HasKey("DersId");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("BolumId");

                    b.HasIndex("DonemId");

                    b.ToTable("Derses");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Derslik", b =>
                {
                    b.Property<int>("DerslikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DerslikId"), 1L, 1);

                    b.Property<string>("DerslikBina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DerslikKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DerslikTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Kapasite")
                        .HasColumnType("int");

                    b.Property<string>("KullanimDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SinavKapasitesi")
                        .HasColumnType("int");

                    b.HasKey("DerslikId");

                    b.ToTable("Dersliks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DerslikDersKisit", b =>
                {
                    b.Property<int>("DerslikDersKisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DerslikDersKisitId"), 1L, 1);

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("DerslikId")
                        .HasColumnType("int");

                    b.HasKey("DerslikDersKisitId");

                    b.HasIndex("DersId");

                    b.HasIndex("DerslikId");

                    b.ToTable("DerslikDersKisits");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DerslikKisit", b =>
                {
                    b.Property<int>("DerslikKisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DerslikKisitId"), 1L, 1);

                    b.Property<int>("DerslikId")
                        .HasColumnType("int");

                    b.Property<int>("SablonZamanId")
                        .HasColumnType("int");

                    b.HasKey("DerslikKisitId");

                    b.HasIndex("DerslikId");

                    b.HasIndex("SablonZamanId");

                    b.ToTable("DerslikKisits");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DersProgrami", b =>
                {
                    b.Property<int>("DersProgramiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DersProgramiId"), 1L, 1);

                    b.Property<int?>("DersGunu")
                        .HasColumnType("int");

                    b.Property<int?>("DersId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DersSaati")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DerslikId")
                        .HasColumnType("int");

                    b.Property<int?>("DonemId")
                        .HasColumnType("int");

                    b.HasKey("DersProgramiId");

                    b.HasIndex("DersId");

                    b.HasIndex("DerslikId");

                    b.HasIndex("DonemId");

                    b.ToTable("DersProgramis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Donem", b =>
                {
                    b.Property<int>("DonemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonemId"), 1L, 1);

                    b.Property<string>("DonemAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DonemId");

                    b.ToTable("Donems");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Fakulte", b =>
                {
                    b.Property<int>("FakulteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FakulteId"), 1L, 1);

                    b.Property<string>("FakulteAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FakulteId");

                    b.ToTable("Fakultes");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Ogrenci", b =>
                {
                    b.Property<int>("OgrenciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgrenciId"), 1L, 1);

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<int?>("DersId")
                        .HasColumnType("int");

                    b.Property<string>("OgrenciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OgrenciNumarasi")
                        .HasColumnType("int");

                    b.Property<string>("OgrenciSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgrenciId");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("DersId");

                    b.ToTable("Ogrencis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SablonZaman", b =>
                {
                    b.Property<int>("SablonZamanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SablonZamanId"), 1L, 1);

                    b.Property<DateTime?>("DersBaslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DersBitis")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gun")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SablonZamanId");

                    b.ToTable("SablonZamans");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SinavProgrami", b =>
                {
                    b.Property<int>("SinavProgramiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SinavProgramiId"), 1L, 1);

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<int?>("DersId")
                        .HasColumnType("int");

                    b.Property<int?>("DerslikId")
                        .HasColumnType("int");

                    b.Property<int?>("DonemId")
                        .HasColumnType("int");

                    b.Property<int?>("SinavGunu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SinavSaati")
                        .HasColumnType("datetime2");

                    b.HasKey("SinavProgramiId");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("DersId");

                    b.HasIndex("DerslikId");

                    b.HasIndex("DonemId");

                    b.ToTable("SinavProgramis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Akademisyen", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Donem", "Donem")
                        .WithMany("Akademisyens")
                        .HasForeignKey("DonemId");

                    b.Navigation("Donem");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AkademisyenKisit", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Akademisyen", "Akademisyen")
                        .WithMany("AkademisyenKisits")
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("EntityLayer.Concrete.SablonZaman", "SablonZaman")
                        .WithMany("AkademisyenKisits")
                        .HasForeignKey("SablonZamanId");

                    b.Navigation("Akademisyen");

                    b.Navigation("SablonZaman");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Bolum", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Fakulte", "Fakulte")
                        .WithMany("Bolums")
                        .HasForeignKey("FakulteId");

                    b.Navigation("Fakulte");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BolumKisit", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Bolum", "Bolum")
                        .WithMany("BolumKisits")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.SablonZaman", "SablonZaman")
                        .WithMany("BolumKisits")
                        .HasForeignKey("SablonZamanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");

                    b.Navigation("SablonZaman");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Ders", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Akademisyen", "Akademisyen")
                        .WithMany("Derses")
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("EntityLayer.Concrete.Bolum", "Bolum")
                        .WithMany("Derses")
                        .HasForeignKey("BolumId");

                    b.HasOne("EntityLayer.Concrete.Donem", "Donem")
                        .WithMany("Derses")
                        .HasForeignKey("DonemId");

                    b.Navigation("Akademisyen");

                    b.Navigation("Bolum");

                    b.Navigation("Donem");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DerslikDersKisit", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Ders", "Ders")
                        .WithMany("DerslikDersKisits")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Derslik", "Derslik")
                        .WithMany("DerslikDersKisits")
                        .HasForeignKey("DerslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Derslik");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DerslikKisit", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Derslik", "Derslik")
                        .WithMany("DerslikKisits")
                        .HasForeignKey("DerslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.SablonZaman", "SablonZaman")
                        .WithMany("DerslikKisits")
                        .HasForeignKey("SablonZamanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Derslik");

                    b.Navigation("SablonZaman");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DersProgrami", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Ders", "Ders")
                        .WithMany("DersProgramis")
                        .HasForeignKey("DersId");

                    b.HasOne("EntityLayer.Concrete.Derslik", "Derslik")
                        .WithMany("DersProgramis")
                        .HasForeignKey("DerslikId");

                    b.HasOne("EntityLayer.Concrete.Donem", "Donem")
                        .WithMany("DersProgramis")
                        .HasForeignKey("DonemId");

                    b.Navigation("Ders");

                    b.Navigation("Derslik");

                    b.Navigation("Donem");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Ogrenci", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Akademisyen", "Akademisyen")
                        .WithMany("Ogrencis")
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("EntityLayer.Concrete.Ders", "Ders")
                        .WithMany("Ogrencis")
                        .HasForeignKey("DersId");

                    b.Navigation("Akademisyen");

                    b.Navigation("Ders");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SinavProgrami", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Akademisyen", "Akademisyen")
                        .WithMany("SinavProgramis")
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("EntityLayer.Concrete.Ders", "Ders")
                        .WithMany("SinavProgramis")
                        .HasForeignKey("DersId");

                    b.HasOne("EntityLayer.Concrete.Derslik", "Derslik")
                        .WithMany("SinavProgramis")
                        .HasForeignKey("DerslikId");

                    b.HasOne("EntityLayer.Concrete.Donem", "Donem")
                        .WithMany("SinavProgramis")
                        .HasForeignKey("DonemId");

                    b.Navigation("Akademisyen");

                    b.Navigation("Ders");

                    b.Navigation("Derslik");

                    b.Navigation("Donem");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Akademisyen", b =>
                {
                    b.Navigation("AkademisyenKisits");

                    b.Navigation("Derses");

                    b.Navigation("Ogrencis");

                    b.Navigation("SinavProgramis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Bolum", b =>
                {
                    b.Navigation("BolumKisits");

                    b.Navigation("Derses");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Ders", b =>
                {
                    b.Navigation("DersProgramis");

                    b.Navigation("DerslikDersKisits");

                    b.Navigation("Ogrencis");

                    b.Navigation("SinavProgramis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Derslik", b =>
                {
                    b.Navigation("DersProgramis");

                    b.Navigation("DerslikDersKisits");

                    b.Navigation("DerslikKisits");

                    b.Navigation("SinavProgramis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Donem", b =>
                {
                    b.Navigation("Akademisyens");

                    b.Navigation("DersProgramis");

                    b.Navigation("Derses");

                    b.Navigation("SinavProgramis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Fakulte", b =>
                {
                    b.Navigation("Bolums");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SablonZaman", b =>
                {
                    b.Navigation("AkademisyenKisits");

                    b.Navigation("BolumKisits");

                    b.Navigation("DerslikKisits");
                });
#pragma warning restore 612, 618
        }
    }
}
